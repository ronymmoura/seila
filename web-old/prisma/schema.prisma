// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String
  password String

  cards          Card[]
  recurrentBills RecurrentBill[]
}

model RecurrentBill {
  id          Int      @id @default(autoincrement())
  description String
  value       Decimal  @db.Decimal(10, 2)
  dueDate     DateTime

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Card {
  id          Int        @id @default(autoincrement())
  number      String
  dueDate     DateTime
  closingDate Int
  name        String
  color       String
  monthTotal  Int?
  purchases   Purchase[]

  user   User? @relation(fields: [userId], references: [id])
  userId Int
}

model Purchase {
  id                   Int      @id @default(autoincrement())
  description          String
  value                Decimal  @db.Decimal(10, 2)
  date                 DateTime
  numberOfInstallments Int?
  paidInstallments     Int?
  installmentValue     Decimal? @db.Decimal(10, 2)

  installments Installment[]

  card   Card? @relation(fields: [cardId], references: [id])
  cardId Int?

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

model Installment {
  id          Int       @id @default(autoincrement())
  number      Int
  paymentDate DateTime?
  isPaid      Boolean   @default(false)
  value       Decimal?  @db.Decimal(10, 2)

  Purchase   Purchase? @relation(fields: [purchaseId], references: [id])
  purchaseId Int?
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  color String
  icon  String

  recurrentBills RecurrentBill[]
  purchases      Purchase[]
}
